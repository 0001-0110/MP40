@using MP40.MVC.Models
@model Video

@{
	IEnumerable<Genre> genres = (IEnumerable<Genre>)ViewData["Genres"]!;
	IEnumerable<Tag> tags = (IEnumerable<Tag>)ViewData["Tags"]!;
}

<h4>Video</h4>
<hr />
<div class="row">
	<div class="col-md-4">
		<form asp-action="Create" enctype="multipart/form-data">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="Name" class="control-label"></label>
				<input asp-for="Name" class="form-control" />
				<span asp-validation-for="Name" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Description" class="control-label"></label>
				<input asp-for="Description" class="form-control" />
				<span asp-validation-for="Description" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="TotalSeconds" class="control-label">Duration</label>
				<input asp-for="TotalSeconds" class="form-control" />
				<span asp-validation-for="TotalSeconds" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="StreamingUrl" class="control-label">Url</label>
				<input asp-for="StreamingUrl" class="form-control" />
				<span asp-validation-for="StreamingUrl" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="GenreId" class="control-label">Genre</label>
				<select asp-for="GenreId" class="form-control">
					@foreach (Genre genre in genres)
					{
						<option value="@genre.Id">@genre.Name</option>
					}
				</select>
				<span asp-validation-for="GenreId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="TagIds" class="control-label">Tags</label>
				<select asp-for="TagIds" class="form-control" multiple="multiple">
					@foreach (Tag tag in tags)
					{
						<option value="@tag.Id">@tag.Name</option>
					}
				</select>
				<span asp-validation-for="TagIds" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label class="control-label">Thumbnail</label>
				<input id="thumbnailInput" type="file" accept="image/*" asp-for="ImageContent" class="form-control" />
				<span asp-validation-for="ImageContent" class="text-danger"></span>
				<div id="thumbnailPreview" />
			</div>
			<div class="form-group">
				<input type="submit" value="Create" class="btn btn-primary" />
			</div>
		</form>
	</div>
</div>

<div>
	<a asp-action="Index">Back to List</a>
</div>

@section Scripts {
	<script>
		// Get the input element and preview container
		const thumbnailInput = document.getElementById('thumbnailInput');
		const thumbnailPreview = document.getElementById('thumbnailPreview');

		// Add an event listener for when the input value changes
		thumbnailInput.addEventListener('change', () => {
			// Get the selected file
			const file = thumbnailInput.files[0];

			// Create a FileReader to read the file data
			const reader = new FileReader();

			// Define the onload event handler to display the preview
			reader.onload = () => {
				// Create an image element
				const image = document.createElement('img');
				image.src = reader.result;
				image.classList.add('thumbnail-preview');

				// Clear the previous preview and append the new image
				thumbnailPreview.innerHTML = '';
				thumbnailPreview.appendChild(image);
			};

			// Read the file as a data URL
			if (file) {
				reader.readAsDataURL(file);
			}
		});
	</script>
}